type: update
id: jenkins-auto-cluster
baseUrl: https://raw.githubusercontent.com/SiryjVyiko/jenkins/master
logo: /images/jenkins.png
name: Jenkins DevOps Pack Cluster Logic

onInstall:
  - if (${settings.cloned:false}): cleanupNodes
  - else: setupCluster
  - readPublicKeyFromMaster
  - forEach(nodes.slaves):
      initSlave:
        publicKey: ${response.body}
        slaveNodeId: ${@i.id}
        slaveNodeIp: ${@i.intIP}
          
onAfterScaleOut[slaves]:
  - readPublicKeyFromMaster
  - forEach(event.response.nodes):
      initSlave:
        publicKey: ${response.body}
        slaveNodeId: ${@i.id}
        slaveNodeIp: ${@i.intIP}
          
onBeforeScaleIn[slaves]:
  forEach(event.response.nodes):
    removeSlave:
      slaveNodeId: ${@i.id}

onAfterClone:
  install:
    jps: ${baseUrl}/addons/auto-clustering/auto-cluster.jps?_r=${fn.random}
    envName: ${event.response.env.envName}
    settings:
      cloned: 'true'

actions:
   cleanupNodes:
    cmd[cp]: |-
      rm -rf /var/lib/jenkins/nodes/*;
      echo "" > /home/jelastic/.ssh/known_hosts;
      service jenkins restart;
    user: root

   setupMaster:
    - cmd[cp]: |-
        pswd=$(cat /var/lib/jenkins/secrets/initialAdminPassword)
        jar=/opt/jenkins/WEB-INF/jenkins-cli.jar
        sudo service jenkins restart
        while [[ $(curl -s -w "%{http_code}" http://localhost/ -o /dev/null) != "403" ]]; do echo "."; sleep 2; done
        echo -e "\n"|ssh-keygen -t rsa -N ""
        wget ${baseUrl}/conf/credentials.xml -O credentials.xml
        xmlstarlet ed --inplace -u "com.cloudbees.jenkins.plugins.sshcredentials.impl.BasicSSHUserPrivateKey/privateKeySource/privateKey" -v "$(cat .ssh/id_rsa)" credentials.xml 2>/dev/null;
        cat credentials.xml | java -jar $jar -s http://localhost -auth admin:$pswd create-credentials-by-xml "SystemCredentialsProvider::SystemContextResolver::jenkins" "(global)"
        rm -f credentials.xml
   
   readPublicKeyFromMaster:
    api: env.file.Read
    path: /home/jelastic/.ssh/id_rsa.pub
    nodeid: ${nodes.cp.master.id}
        
   initSlave:
    - cmd[${this.slaveNodeId}]: |-
        yum -y install gettext
      user: root
    - cmd[${this.slaveNodeId}]: |-
        echo "${this.publicKey}" >> /home/jelastic/.ssh/authorized_keys;
        cat /etc/ssh/ssh_host_rsa_key.pub
        echo "/home/jelastic/.ssh/authorized_keys" >> /etc/jelastic/redeploy.conf
        echo "/etc/ssh/" >> /etc/jelastic/redeploy.conf
    - cmd[${nodes.cp.master.id}]: |-
        ssh-keygen -R ${this.slaveNodeIp}
        echo ${this.slaveNodeIp} ${response.out} >> ~/.ssh/known_hosts
        pswd=$(cat /var/lib/jenkins/secrets/initialAdminPassword)
        jar=/opt/jenkins/WEB-INF/jenkins-cli.jar
        wget ${baseUrl}/conf/worker.xml -O worker.xml
        xmlstarlet ed --inplace -u "slave/name" -v "node${this.slaveNodeId}" worker.xml 2>/dev/null;
        xmlstarlet ed --inplace -u "slave/launcher/host" -v "${this.slaveNodeIp}" worker.xml 2>/dev/null;
        xmlstarlet ed --inplace -u "slave/label" -v "node${this.slaveNodeId}" worker.xml 2>/dev/null;
        cat worker.xml | java -jar $jar -s http://localhost -auth admin:$pswd create-node node${this.slaveNodeId}
        rm -f worker.xml
   
   removeSlave:
    cmd[${nodes.cp.master.id}]: |-
      pswd=$(cat /var/lib/jenkins/secrets/initialAdminPassword)
      jar=/opt/jenkins/WEB-INF/jenkins-cli.jar
      java -jar $jar -s http://localhost -auth admin:$pswd delete-node node${this.slaveNodeId}
